Archive member included because of file (symbol)

d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                              ./main.o (__mulsi3)
d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/INT/INT.o
LOAD ./MCAL/DIO/DIO.o
LOAD ./MCAL/ADC/ADC.o
LOAD ./main.o
LOAD d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xde0
 *(.vectors)
 .vectors       0x00000000       0x54 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000068                __vector_1
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
 .text          0x0000006c        0x0 ./MCAL/INT/INT.o
 .text          0x0000006c        0x0 ./MCAL/DIO/DIO.o
 .text          0x0000006c        0x0 ./MCAL/ADC/ADC.o
 .text          0x0000006c        0x0 ./main.o
 .text          0x0000006c        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .text          0x0000006c        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.INT_voidEnable
                0x0000006c      0x228 ./MCAL/INT/INT.o
                0x0000006c                INT_voidEnable
 .text.INT_voidDisable
                0x00000294       0x6e ./MCAL/INT/INT.o
                0x00000294                INT_voidDisable
 .text.DIO_voidSetPinDirection
                0x00000302      0x38c ./MCAL/DIO/DIO.o
                0x00000302                DIO_voidSetPinDirection
 .text.DIO_voidSetPinValue
                0x0000068e      0x208 ./MCAL/DIO/DIO.o
                0x0000068e                DIO_voidSetPinValue
 .text.DIO_voidTogglePinValue
                0x00000896      0x102 ./MCAL/DIO/DIO.o
                0x00000896                DIO_voidTogglePinValue
 .text.DIO_u8GetPinValue
                0x00000998      0x112 ./MCAL/DIO/DIO.o
                0x00000998                DIO_u8GetPinValue
 .text.DIO_voidSetPortDirection
                0x00000aaa       0x82 ./MCAL/DIO/DIO.o
                0x00000aaa                DIO_voidSetPortDirection
 .text.DIO_voidSetPortValue
                0x00000b2c       0x82 ./MCAL/DIO/DIO.o
                0x00000b2c                DIO_voidSetPortValue
 .text.ADC_voidInit
                0x00000bae       0x5e ./MCAL/ADC/ADC.o
                0x00000bae                ADC_voidInit
 .text.ADC_u16GetDigitalValue
                0x00000c0c       0x5e ./MCAL/ADC/ADC.o
                0x00000c0c                ADC_u16GetDigitalValue
 .text.ADC_voidDisable
                0x00000c6a       0x1c ./MCAL/ADC/ADC.o
                0x00000c6a                ADC_voidDisable
 .text.main     0x00000c86      0x118 ./main.o
                0x00000c86                main
 .text.libgcc   0x00000d9e       0x3e d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                0x00000d9e                __mulsi3
 .text.libgcc   0x00000ddc        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000ddc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000ddc        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000ddc                exit
                0x00000ddc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000ddc        0x4 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000de0                _etext = .

.data           0x00800060        0x0 load address 0x00000de0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/INT/INT.o
 .data          0x00800060        0x0 ./MCAL/DIO/DIO.o
 .data          0x00800060        0x0 ./MCAL/ADC/ADC.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .data          0x00800060        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./MCAL/INT/INT.o
 .bss           0x00800060        0x0 ./MCAL/DIO/DIO.o
 .bss           0x00800060        0x0 ./MCAL/ADC/ADC.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .bss           0x00800060        0x0 d:/documents/embedded/iti summer training 2023/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x00000de0                __data_load_start = LOADADDR (.data)
                0x00000de0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xfe4
 *(.stab)
 .stab          0x00000000      0x528 ./MCAL/INT/INT.o
 .stab          0x00000528      0x5a0 ./MCAL/DIO/DIO.o
                                0x75c (size before relaxing)
 .stab          0x00000ac8      0x2b8 ./MCAL/ADC/ADC.o
                                0x474 (size before relaxing)
 .stab          0x00000d80      0x264 ./main.o
                                0x48c (size before relaxing)

.stabstr        0x00000000      0xce2
 *(.stabstr)
 .stabstr       0x00000000      0xce2 ./MCAL/INT/INT.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ADC.elf elf32-avr)
LOAD linker stubs
